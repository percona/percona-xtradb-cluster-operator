name: Scan docker
on: [pull_request]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io

  # github.repository as <account>/<repo>
  IMAGE_NAME: perconalab/percona-xtradb-cluster-operator

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Clean cached tools and dependencies
        run: |
          go clean -cache

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build an image from Dockerfile (linux/arm64)
        run: |
          export IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-arm64
          export DOCKER_PUSH=0
          export DOCKER_SQUASH=0
          export DOCKER_DEFAULT_PLATFORM='linux/arm64'
          ./e2e-tests/build

      - name: Run Snyk vulnerability scanner image (linux/arm64)
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-arm64'
          args: --platform=linux/arm64 --severity-threshold=high --exclude-base-image-vulns --file=./build/Dockerfile -fail-on=upgradable

      - name: Build an image from Dockerfile (linux/amd64)
        run: |
          export IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-amd64
          export DOCKER_PUSH=0
          export DOCKER_SQUASH=0
          export DOCKER_DEFAULT_PLATFORM='linux/amd64'
          ./e2e-tests/build

      - name: Run Snyk vulnerability scanner image (linux/amd64)
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-amd64'
          args: --platform=linux/amd64 --severity-threshold=high --exclude-base-image-vulns --file=./build/Dockerfile -fail-on=upgradable

