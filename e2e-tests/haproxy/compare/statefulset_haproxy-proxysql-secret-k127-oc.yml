apiVersion: apps/v1
kind: StatefulSet
metadata:
  generation: 2
  name: haproxy-proxysql
  ownerReferences:
    - controller: true
      kind: PerconaXtraDBCluster
      name: haproxy
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  podManagementPolicy: OrderedReady
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: proxysql
      app.kubernetes.io/instance: haproxy
      app.kubernetes.io/managed-by: percona-xtradb-cluster-operator
      app.kubernetes.io/name: percona-xtradb-cluster
      app.kubernetes.io/part-of: percona-xtradb-cluster
  serviceName: haproxy-proxysql-unready
  template:
    metadata:
      labels:
        app.kubernetes.io/component: proxysql
        app.kubernetes.io/instance: haproxy
        app.kubernetes.io/managed-by: percona-xtradb-cluster-operator
        app.kubernetes.io/name: percona-xtradb-cluster
        app.kubernetes.io/part-of: percona-xtradb-cluster
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: proxysql
                  app.kubernetes.io/instance: haproxy
                  app.kubernetes.io/managed-by: percona-xtradb-cluster-operator
                  app.kubernetes.io/name: percona-xtradb-cluster
                  app.kubernetes.io/part-of: percona-xtradb-cluster
              topologyKey: kubernetes.io/hostname
      containers:
        - env:
            - name: PXC_SERVICE
              value: haproxy-pxc
            - name: OPERATOR_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: operator
                  name: internal-haproxy
            - name: PROXY_ADMIN_USER
              value: proxyadmin
            - name: PROXY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: proxyadmin
                  name: internal-haproxy
            - name: MONITOR_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: monitor
                  name: internal-haproxy
          envFrom:
            - secretRef:
                name: haproxy-env-vars-proxysql
                optional: true
          imagePullPolicy: Always
          name: proxysql
          ports:
            - containerPort: 3306
              name: mysql
              protocol: TCP
            - containerPort: 6032
              name: proxyadm
              protocol: TCP
          resources:
            limits:
              cpu: 700m
              memory: 1G
            requests:
              cpu: 100m
              memory: 100M
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/proxysql
              name: proxydata
            - mountPath: /etc/proxysql/ssl
              name: ssl
            - mountPath: /etc/proxysql/ssl-internal
              name: ssl-internal
            - mountPath: /etc/proxysql/
              name: config
        - args:
            - /usr/bin/peer-list
            - -on-change=/usr/bin/add_pxc_nodes.sh
            - -service=$(PXC_SERVICE)
          env:
            - name: PXC_SERVICE
              value: haproxy-pxc
            - name: OPERATOR_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: operator
                  name: internal-haproxy
            - name: PROXY_ADMIN_USER
              value: proxyadmin
            - name: PROXY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: proxyadmin
                  name: internal-haproxy
            - name: MONITOR_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: monitor
                  name: internal-haproxy
          envFrom:
            - secretRef:
                name: haproxy-env-vars-proxysql
                optional: true
          imagePullPolicy: Always
          name: pxc-monit
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
            - /usr/bin/peer-list
            - -on-change=/usr/bin/add_proxysql_nodes.sh
            - -service=$(PROXYSQL_SERVICE)
          env:
            - name: PROXYSQL_SERVICE
              value: haproxy-proxysql-unready
            - name: OPERATOR_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: operator
                  name: internal-haproxy
            - name: PROXY_ADMIN_USER
              value: proxyadmin
            - name: PROXY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: proxyadmin
                  name: internal-haproxy
            - name: MONITOR_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: monitor
                  name: internal-haproxy
          envFrom:
            - secretRef:
                name: haproxy-env-vars-proxysql
                optional: true
          imagePullPolicy: Always
          name: proxysql-monit
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
            - -c
            - while true; do trap 'exit 0' SIGINT SIGTERM SIGQUIT SIGKILL; done;
          command:
            - /bin/sh
          imagePullPolicy: Always
          name: my-sidecar-1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
            - -c
            - while true; do trap 'exit 0' SIGINT SIGTERM SIGQUIT SIGKILL; done;
          command:
            - /bin/sh
          imagePullPolicy: Always
          name: my-sidecar-2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      initContainers:
        - command:
            - /pxc-init-entrypoint.sh
          imagePullPolicy: Always
          name: pxc-init
          resources:
            limits:
              cpu: "1"
              memory: 500M
            requests:
              cpu: 300m
              memory: 200M
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: bin
      restartPolicy: Always
      runtimeClassName: docker-rc
      schedulerName: default-scheduler
      securityContext:
        supplementalGroups:
          - 1001
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
        - name: ssl-internal
          secret:
            defaultMode: 420
            optional: true
            secretName: haproxy-ssl-internal
        - name: ssl
          secret:
            defaultMode: 420
            optional: false
            secretName: haproxy-ssl
        - name: config
          secret:
            defaultMode: 420
            optional: false
            secretName: haproxy-proxysql
        - emptyDir: {}
          name: bin
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
    - metadata:
        name: proxydata
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 2Gi
      status:
        phase: Pending
