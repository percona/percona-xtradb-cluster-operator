#!/bin/bash

GIT_BRANCH=${VERSION:-$(git rev-parse --abbrev-ref HEAD | sed -e 's^/^-^g; s^[.]^-^g;' | tr '[:upper:]' '[:lower:]')}
API="pxc.percona.com/v1-10-0"
IMAGE=${IMAGE:-"perconalab/percona-xtradb-cluster-operator:${GIT_BRANCH}"}
IMAGE_PXC=${IMAGE_PXC:-"perconalab/percona-xtradb-cluster-operator:main-pxc8.0"}
IMAGE_PMM=${IMAGE_PMM:-"perconalab/pmm-client:dev-latest"}
IMAGE_PROXY=${IMAGE_PROXY:-"perconalab/percona-xtradb-cluster-operator:main-proxysql"}
IMAGE_HAPROXY=${IMAGE_HAPROXY:-"perconalab/percona-xtradb-cluster-operator:main-haproxy"}
IMAGE_BACKUP=${IMAGE_BACKUP:-"perconalab/percona-xtradb-cluster-operator:main-pxc8.0-backup"}
IMAGE_LOGCOLLECTOR=${IMAGE_LOGCOLLECTOR:-"perconalab/percona-xtradb-cluster-operator:main-logcollector"}

src_dir=$(realpath ../../../)
tmp_dir=$(mktemp -d)
sed=$(which gsed || which sed)

get_proxy() {
    local target_cluster=${1}
    if [[ "$(kubectl -n ${NAMESPACE} get pxc ${target_cluster} -o 'jsonpath={.spec.haproxy.enabled}')" == "true" ]]; then
        echo "${target_cluster}-haproxy"
        return
    fi
    if [[ "$(kubectl -n ${NAMESPACE} get pxc ${target_cluster} -o 'jsonpath={.spec.proxysql.enabled}')" == "true" ]]; then
        echo "${target_cluster}-proxysql"
        return
    fi
    echo "${target_cluster}-pxc"
}

run_mysql() {
    local command="$1"
    local uri="$2"

    client_pod=$(kubectl -n ${NAMESPACE} get pods \
        --selector=name=pxc-client \
        -o 'jsonpath={.items[].metadata.name}')

    kubectl -n ${NAMESPACE} exec $client_pod -- \
        bash -c "printf '%s\n' \"${command}\" | mysql -sN $uri" 2>&1 \
        | sed -e 's/mysql: //' \
        | (grep -v 'Using a password on the command line interface can be insecure.' || :)
}

get_cluster_name() {
    echo $(kubectl -n ${NAMESPACE} get pxc -o jsonpath='{.items[0].metadata.name}')
}

