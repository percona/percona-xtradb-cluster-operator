apiVersion: pxc.percona.com/v1-8-0
kind: PerconaXtraDBCluster
metadata:
  name: scheduled-backup
spec:
  backup:
    storages:
      pvc:
        nodeSelector:
          backupWorker: 'True'
        resources:
          requests:
            memory: 1G
            cpu: 600m
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: backupWorker
                  operator: In
                  values:
                  - 'True'
        tolerations:
          - key: "backupWorker"
            operator: "Equal"
            value: "True"
            effect: "NoSchedule"
        annotations:
          testName: scheduled-backup
        labels:
          backupWorker: 'True'
        schedulerName: 'default-scheduler'
        priorityClassName: 'high-priority'
        type: filesystem
        volume:
          persistentVolumeClaim:
            accessModes: [ "ReadWriteOnce" ]
            resources:
              requests:
                storage: 1Gi
      aws-s3:
        type: s3
        s3:
          region: us-east-1
          bucket: operator-testing
          credentialsSecret: aws-s3-secret
        nodeSelector:
          backupWorker: 'True'
        resources:
          requests:
            memory: 1G
            cpu: 600m
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: backupWorker
                  operator: In
                  values:
                  - 'True'
        tolerations:
          - key: "backupWorker"
            operator: "Equal"
            value: "True"
            effect: "NoSchedule"
        annotations:
          testName: scheduled-backup
        labels:
          backupWorker: 'True'
        schedulerName: 'default-scheduler'
        priorityClassName: 'high-priority'
      minio:
        type: s3
        s3:
          credentialsSecret: minio-secret
          region: us-east-1
          bucket: operator-testing
          endpointUrl: http://minio-service:9000/
        nodeSelector:
          backupWorker: 'True'
        resources:
          requests:
            memory: 1G
            cpu: 600m
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: backupWorker
                  operator: In
                  values:
                  - 'True'
        tolerations:
          - key: "backupWorker"
            operator: "Equal"
            value: "True"
            effect: "NoSchedule"
        annotations:
          testName: scheduled-backup
        labels:
          backupWorker: 'True'
        schedulerName: 'default-scheduler'
        priorityClassName: 'high-priority'
      gcp-cs:
        type: s3
        s3:
          credentialsSecret: gcp-cs-secret
          region: us-east-1
          bucket: operator-testing
          endpointUrl: https://storage.googleapis.com
        nodeSelector:
          backupWorker: 'True'
        resources:
          requests:
            memory: 1G
            cpu: 600m
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: backupWorker
                  operator: In
                  values:
                  - 'True'
        tolerations:
          - key: "backupWorker"
            operator: "Equal"
            value: "True"
            effect: "NoSchedule"
        annotations:
          testName: scheduled-backup
        labels:
          backupWorker: 'True'
        schedulerName: 'default-scheduler'
        priorityClassName: 'high-priority'
    schedule:
      - name: each-min-pvc
        schedule: "* * * * *"
        keep: 30
        storageName: pvc
      - name: each-min-aws-s3
        schedule: "* * * * *"
        keep: 30
        storageName: aws-s3
      - name: each-min-minio
        schedule: "* * * * *"
        keep: 30
        storageName: minio
      - name: each-min-gcp-cs
        schedule: "* * * * *"
        keep: 30
        storageName: gcp-cs

