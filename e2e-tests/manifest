#!/usr/bin/env bash

set -e

if ! command -v controller-gen &>/dev/null; then
	echo "controller-gen is required. install using:"
	echo "  go install sigs.k8s.io/controller-tools/cmd/controller-gen@latest"
	exit 1
fi

set -o xtrace

controller-gen crd:allowDangerousTypes=true,maxDescLen=0 paths=./pkg/apis/... output:dir=./deploy/crds

crd_ver=${1}
if [ "${crd_ver}" == "" ]; then
	crd_ver=$(yq eval "select(document_index == 0) | .spec.versions[-1].name" "deploy/crd.yaml")
fi

wip_crd=$(mktemp)
yq eval 'select(document_index == 0) |
	del(.spec.versions[] |
	select(.name == "v1-12-0")) |
	.spec.versions[].storage = false' "deploy/crd.yaml" >"$wip_crd"

yq -i eval "(.spec.versions += {\"name\": \"${crd_ver}\"})" "$wip_crd"

sed '/.*- protocol/d; s/.*- containerPort/&\n&/; s/- containerPort/- protocol/' \
	deploy/crds/pxc.percona.com_perconaxtradbclusters.yaml \
	| yq eval ".spec.versions[0] | del(.name)" - \
	| sed 's/^/      /g' \
		>>"$wip_crd"

# deploy/crd.yaml
crd_file=$(mktemp)
yq eval "$wip_crd" "deploy/crds/pxc.percona.com_perconaxtradbclusterbackups.yaml" "deploy/crds/pxc.percona.com_perconaxtradbclusterrestores.yaml" >"$crd_file"
mv "$crd_file" "deploy/crd.yaml"

# deploy/bundle.yaml
bundle_file=$(mktemp)
yq eval "deploy/crd.yaml" "deploy/rbac.yaml" "deploy/operator.yaml" >"$bundle_file"
mv "$bundle_file" "deploy/bundle.yaml"

# deploy/cw-bundle.yaml
cw_bundle_file=$(mktemp)
yq eval "deploy/crd.yaml" "deploy/cw-rbac.yaml" "deploy/cw-operator.yaml" >"$cw_bundle_file"
mv "$cw_bundle_file" "deploy/cw-bundle.yaml"

rm -rf ./deploy/crds
