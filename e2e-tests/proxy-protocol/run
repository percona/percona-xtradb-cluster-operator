#!/bin/bash

set -o errexit
set -o xtrace

cluster="proxy-protocol"
test_dir=$(realpath $(dirname $0))
. ${test_dir}/../functions

prepare_config() {
	nodes=$(kubectl get nodes | grep -v "NAME" | awk '{print $1}')
	if [ $(printf "${nodes}\n" | wc -l) -lt 3 ]; then
		echo "3 nodes are expected for this test to run."
		exit 1
	fi
	haproxy_node=$(echo "${nodes}" | head -n1)
	pxc_node=$(echo "${nodes}" | head -n2 | tail -n1)
	client_node=$(echo "${nodes}" | head -n3 | tail -n1)
	cat ${test_dir}/conf/${cluster}.yml \
		| $sed -e "s#kubernetes.io/hostname:.*-node1\$#kubernetes.io/hostname: ${haproxy_node}#" \
		| $sed -e "s#kubernetes.io/hostname:.*-node2\$#kubernetes.io/hostname: ${pxc_node}#" >${tmp_dir}/${cluster}.yml
	cat ${test_dir}/conf/client.yml | $sed -e "s#kubernetes.io/hostname:.*-node3\$#kubernetes.io/hostname: ${client_node}#" >${tmp_dir}/client.yml
}

prepare_config
create_infra ${namespace}

desc 'create first PXC cluster'
spinup_pxc "${cluster}" "${tmp_dir}/${cluster}.yml" "3" "15" "${conf_dir}/secrets.yml" "${tmp_dir}/client.yml" "33062"
client_ip=$(kubectl_bin get pods --selector=name=pxc-client -o 'jsonpath={.items[].status.podIP}')
service_ip=$(get_service_endpoint proxy-protocol-haproxy)

desc 'check if service and statefulset created with expected config'
compare_kubectl statefulset/${cluster}-pxc
compare_kubectl statefulset/${cluster}-haproxy
compare_kubectl service/${cluster}-pxc
compare_kubectl service/${cluster}-haproxy
compare_kubectl service/${cluster}-haproxy-replicas

desc 'check if client ip visible in mysql processlist'
run_mysql "select sleep(15);" "-h ${service_ip} -uroot -proot_password" &
nr_queries=$(run_mysql "show processlist;" "-h ${service_ip} -uroot -proot_password" | grep "select sleep(15)" | grep "${client_ip}" | wc -l)
if [ ${nr_queries} -ne 1 ]; then
	echo "Client IP ${client_ip} is not found in process list!"
	exit 1
fi

desc 'cleanup'
kubectl_bin delete -f ${test_dir}/conf/${cluster}.yml
destroy ${namespace}
