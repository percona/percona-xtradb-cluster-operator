// Code generated by go-swagger; DO NOT EDIT.

package version_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewVersionServiceGetReleaseNotesParams creates a new VersionServiceGetReleaseNotesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewVersionServiceGetReleaseNotesParams() *VersionServiceGetReleaseNotesParams {
	return &VersionServiceGetReleaseNotesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewVersionServiceGetReleaseNotesParamsWithTimeout creates a new VersionServiceGetReleaseNotesParams object
// with the ability to set a timeout on a request.
func NewVersionServiceGetReleaseNotesParamsWithTimeout(timeout time.Duration) *VersionServiceGetReleaseNotesParams {
	return &VersionServiceGetReleaseNotesParams{
		timeout: timeout,
	}
}

// NewVersionServiceGetReleaseNotesParamsWithContext creates a new VersionServiceGetReleaseNotesParams object
// with the ability to set a context for a request.
func NewVersionServiceGetReleaseNotesParamsWithContext(ctx context.Context) *VersionServiceGetReleaseNotesParams {
	return &VersionServiceGetReleaseNotesParams{
		Context: ctx,
	}
}

// NewVersionServiceGetReleaseNotesParamsWithHTTPClient creates a new VersionServiceGetReleaseNotesParams object
// with the ability to set a custom HTTPClient for a request.
func NewVersionServiceGetReleaseNotesParamsWithHTTPClient(client *http.Client) *VersionServiceGetReleaseNotesParams {
	return &VersionServiceGetReleaseNotesParams{
		HTTPClient: client,
	}
}

/*
VersionServiceGetReleaseNotesParams contains all the parameters to send to the API endpoint

	for the version service get release notes operation.

	Typically these are written to a http.Request.
*/
type VersionServiceGetReleaseNotesParams struct {

	/* Product.

	   Product name.
	*/
	Product string

	/* Version.

	   Product version.
	*/
	Version string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the version service get release notes params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *VersionServiceGetReleaseNotesParams) WithDefaults() *VersionServiceGetReleaseNotesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the version service get release notes params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *VersionServiceGetReleaseNotesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the version service get release notes params
func (o *VersionServiceGetReleaseNotesParams) WithTimeout(timeout time.Duration) *VersionServiceGetReleaseNotesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the version service get release notes params
func (o *VersionServiceGetReleaseNotesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the version service get release notes params
func (o *VersionServiceGetReleaseNotesParams) WithContext(ctx context.Context) *VersionServiceGetReleaseNotesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the version service get release notes params
func (o *VersionServiceGetReleaseNotesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the version service get release notes params
func (o *VersionServiceGetReleaseNotesParams) WithHTTPClient(client *http.Client) *VersionServiceGetReleaseNotesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the version service get release notes params
func (o *VersionServiceGetReleaseNotesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithProduct adds the product to the version service get release notes params
func (o *VersionServiceGetReleaseNotesParams) WithProduct(product string) *VersionServiceGetReleaseNotesParams {
	o.SetProduct(product)
	return o
}

// SetProduct adds the product to the version service get release notes params
func (o *VersionServiceGetReleaseNotesParams) SetProduct(product string) {
	o.Product = product
}

// WithVersion adds the version to the version service get release notes params
func (o *VersionServiceGetReleaseNotesParams) WithVersion(version string) *VersionServiceGetReleaseNotesParams {
	o.SetVersion(version)
	return o
}

// SetVersion adds the version to the version service get release notes params
func (o *VersionServiceGetReleaseNotesParams) SetVersion(version string) {
	o.Version = version
}

// WriteToRequest writes these params to a swagger request
func (o *VersionServiceGetReleaseNotesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param product
	if err := r.SetPathParam("product", o.Product); err != nil {
		return err
	}

	// path param version
	if err := r.SetPathParam("version", o.Version); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
