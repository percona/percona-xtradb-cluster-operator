// Code generated by go-swagger; DO NOT EDIT.

package version_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/percona/percona-xtradb-cluster-operator/pkg/version/client/models"
)

// VersionServiceOperatorReader is a Reader for the VersionServiceOperator structure.
type VersionServiceOperatorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VersionServiceOperatorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewVersionServiceOperatorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewVersionServiceOperatorDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewVersionServiceOperatorOK creates a VersionServiceOperatorOK with default headers values
func NewVersionServiceOperatorOK() *VersionServiceOperatorOK {
	return &VersionServiceOperatorOK{}
}

/*
VersionServiceOperatorOK describes a response with status code 200, with default header values.

A successful response.
*/
type VersionServiceOperatorOK struct {
	Payload *models.VersionOperatorResponse
}

// IsSuccess returns true when this version service operator o k response has a 2xx status code
func (o *VersionServiceOperatorOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this version service operator o k response has a 3xx status code
func (o *VersionServiceOperatorOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this version service operator o k response has a 4xx status code
func (o *VersionServiceOperatorOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this version service operator o k response has a 5xx status code
func (o *VersionServiceOperatorOK) IsServerError() bool {
	return false
}

// IsCode returns true when this version service operator o k response a status code equal to that given
func (o *VersionServiceOperatorOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the version service operator o k response
func (o *VersionServiceOperatorOK) Code() int {
	return 200
}

func (o *VersionServiceOperatorOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /versions/v1/{product}/{operatorVersion}][%d] versionServiceOperatorOK %s", 200, payload)
}

func (o *VersionServiceOperatorOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /versions/v1/{product}/{operatorVersion}][%d] versionServiceOperatorOK %s", 200, payload)
}

func (o *VersionServiceOperatorOK) GetPayload() *models.VersionOperatorResponse {
	return o.Payload
}

func (o *VersionServiceOperatorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(models.VersionOperatorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVersionServiceOperatorDefault creates a VersionServiceOperatorDefault with default headers values
func NewVersionServiceOperatorDefault(code int) *VersionServiceOperatorDefault {
	return &VersionServiceOperatorDefault{
		_statusCode: code,
	}
}

/*
VersionServiceOperatorDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type VersionServiceOperatorDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// IsSuccess returns true when this version service operator default response has a 2xx status code
func (o *VersionServiceOperatorDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this version service operator default response has a 3xx status code
func (o *VersionServiceOperatorDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this version service operator default response has a 4xx status code
func (o *VersionServiceOperatorDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this version service operator default response has a 5xx status code
func (o *VersionServiceOperatorDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this version service operator default response a status code equal to that given
func (o *VersionServiceOperatorDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the version service operator default response
func (o *VersionServiceOperatorDefault) Code() int {
	return o._statusCode
}

func (o *VersionServiceOperatorDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /versions/v1/{product}/{operatorVersion}][%d] VersionService_Operator default %s", o._statusCode, payload)
}

func (o *VersionServiceOperatorDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /versions/v1/{product}/{operatorVersion}][%d] VersionService_Operator default %s", o._statusCode, payload)
}

func (o *VersionServiceOperatorDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *VersionServiceOperatorDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
